name: Update Twitch Live Status

on:
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes (do not go shorter than 5 minutes to avoid rate limiting)
  workflow_dispatch:  # Allow manual triggering

# Environment variables for easy customization
env:
  TWITCH_USERNAME: luckyloottube
  BANNER_IMAGE_URL: https://github.com/LuckyLootTube/LuckyLootTube/blob/f74d0a4c2c664656395472003ffaacdb1d955528/GitHub_Twitch.png
  TWITCH_URL: https://www.twitch.tv/luckyloottube
  GIT_EMAIL: luckyloottube@gmail.com
  GIT_NAME: LuckyLootTube

jobs:
  update-readme:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.7  # Checkout the repository

    # Check if the Twitch stream is live
    - name: Check Twitch Status
      id: twitch-status
      run: |
        live_status=$(curl -s "https://api.doras.to/links/twitch/${{ env.TWITCH_USERNAME }}" | jq -r '.live')
        echo "live_status=$live_status" >> $GITHUB_OUTPUT

    # Update the README based on live status
    - name: Update README
      env:
        LIVE_STATUS: ${{ steps.twitch-status.outputs.live_status }}
      run: |
        echo "Live Status: $LIVE_STATUS"
        if [ "$LIVE_STATUS" == "true" ]; then
          # Add live banner to the top of README if stream is live
          sed -i "1s/^/[![Twitch Live Banner](${{ env.BANNER_IMAGE_URL }})](${{ env.TWITCH_URL }})\n/" README.md
        else
          # Remove live banner from README if stream is not live
          sed -i "/\[!\[Twitch Live Banner\](${{ env.BANNER_IMAGE_URL }})\](${{ env.TWITCH_URL }})/d" README.md
          echo "Removed Twitch Live Banner"
        fi

    # Check if README was modified
    - name: Check for changes
      id: check_changes
      run: |
        git diff README.md
        if [ -n "$(git status --porcelain README.md)" ]; then
          echo "changes_detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes_detected=false" >> $GITHUB_OUTPUT
        fi

    # Commit and push changes if README was modified
    - name: Commit changes
      if: steps.check_changes.outputs.changes_detected == 'true'
      run: |
        git config --global user.email "${{ env.GIT_EMAIL }}"
        git config --global user.name "${{ env.GIT_NAME }}"
        git add README.md
        git commit -m "Update Twitch Live Banner in README"
        git push
